{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","role","aria-label","NavbarBrand","href","src","logo","alt","Nav","NavItem","NavLink","icon","faUser","size","Container","faThumbtack","faHistory","faCameraRetro","Form","Row","FormGroup","Label","for","Input","type","name","id","placeholder","Col","md","check","Button","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2070719.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1d93bcb8.svg\";","import React from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  Row\n} from 'reactstrap';\nimport logo from \"./logo.svg\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHistory, faCameraRetro, faThumbtack, faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar role=\"navigation\" aria-label=\"Main\">\n          <NavbarBrand href=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\"/></NavbarBrand>\n          <Nav>\n            <NavItem><NavLink href=\"#\">Upload</NavLink></NavItem>\n            <NavItem><NavLink href=\"#\">My Album</NavLink></NavItem>\n            <NavItem><NavLink href=\"#\">Photo Repair</NavLink></NavItem>\n            <NavItem><NavLink href=\"#\">Help</NavLink></NavItem>\n            <NavItem><NavLink href=\"#\"><FontAwesomeIcon\n              icon={faUser} size=\"lg\"/></NavLink></NavItem>\n          </Nav>\n        </Navbar>\n      </header>\n      <body>\n      <Container>\n\n        <h1>Walk down memory lane with Good Times Photo</h1>\n\n        <div className=\"blocks\">\n          <div className=\"block\"><span className=\"number-circle\">1</span><p className=\"block--text\">Quick search\n            by location</p><FontAwesomeIcon\n            icon={faThumbtack} size=\"lg\"/></div>\n          <div className=\"block\"><span className=\"number-circle\">2</span><p className=\"block--text\">Choose\n            between a desired\n            time</p><FontAwesomeIcon\n            icon={faHistory} size=\"lg\"/></div>\n          <div className=\"block\"><span className=\"number-circle\">3</span><p className=\"block--text\">View photo of\n            your choice</p><FontAwesomeIcon\n            icon={faCameraRetro} size=\"lg\"/></div>\n        </div>\n\n        <Form className=\"search\">\n          <Row>\n            <FormGroup>\n              <Label for=\"searchLocation\">Location</Label>\n              <Input type=\"location\" name=\"location\" id=\"searchLocation\"\n                     placeholder=\"CITY,  TOWN, AREA NAME, POSTCODE\"/>\n            </FormGroup>\n          </Row>\n\n          <Row>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"searchDistance\">Distance</Label>\n                <select type=\"distance\" name=\"distance\" id=\"searchDistance\">\n                  <option>Select</option>\n                  <option>This area only</option>\n                  <option>Within 1 mile</option>\n                  <option>Within 3 miles</option>\n                  <option>Within 5 miles</option>\n                  <option>Within 10 miles</option>\n                  <option>Within 50 miles</option>\n                </select>\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"searchTime\">Time</Label>\n                <select type=\"time\" name=\"time\" id=\"searchTime\">\n                  <option>Select</option>\n                  <option>2000's till now</option>\n                  <option>1990's</option>\n                  <option>1980's</option>\n                  <option>1970's</option>\n                  <option>1960's</option>\n                  <option>1950's</option>\n                  <option>1940's</option>\n                  <option>1930's</option>\n                  <option>1920's</option>\n                  <option>Before 1920's</option>\n                </select>\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup check>\n                <Label check for=\"checkboxBlackAndWhite\">\n                  <Input type=\"checkbox\" name=\"checkbox\" id=\"checkboxBlackAndWhite\"/>\n                  Black and white only\n                </Label>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Button>Search</Button>\n        </Form>\n\n        <Row className=\"cards\">\n          <Col md={4} xs={6}>\n            <div className=\"card__item\">\n              <div className=\"card\">\n                <div className=\"card__image card__image--upload\"></div>\n                <div className=\"card__content\">\n                  <h2 className=\"card__title\">SHARE YOU OWN</h2>\n                  <p className=\"text-left card__text\">Take part of our historic photo community and start sharing\n                    today!</p>\n                  <Button>Upload</Button>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col md={4} xs={6}>\n            <div className=\"card__item\">\n              <div className=\"card\">\n                <div className=\"card__image card__image--register\"></div>\n                <div className=\"card__content\">\n                  <h2 className=\"card__title\">JOIN THE COMMUNITY</h2>\n                  <p className=\"text-left card__text\">Take part of our historic photo community and start sharing\n                    today!</p>\n                  <Button>Register</Button>\n                </div>\n              </div>\n            </div>\n          </Col>\n          <Col md={4} xs={6}>\n            <div className=\"card__item\">\n              <div className=\"card\">\n                <div className=\"card__image card__image--pricing\"></div>\n                <div className=\"card__content\">\n                  <h2 className=\"card__title\">PHOTO REPAIR</h2>\n                  <p className=\"text-left card__text\">Do you have any old photo that requires restoration?</p>\n                  <Button>Pricing</Button>\n                </div>\n              </div>\n            </div>\n          </Col>\n\n        </Row>\n\n      </Container>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}